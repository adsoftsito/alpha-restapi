swagger: "2.0"
info:
  version: "0.0.1"
  title: Game Collector App
# during dev, should point to your local machine
#host: localhost:10010
host: advance-path-222122.appspot.com
x-google-endpoints:
- name: 'advance-path-222122.appspot.com'
  allowCors: 'true'
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /operadores:
    x-swagger-router-controller: drivers.controller
    get:
      description: get the operadores list
      operationId: getDrivers
      #parameters:
      #  - name: name
      #    in: query
      #    type: string
      #    required: false
      #  - name: sort
      #    in: query
      #    type: string
      #    required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOperadoresListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new operador to the db
      operationId: createOperador
      parameters:
        - in: body
          name: operador
          description: The operador to create.
          schema:
            $ref: "#/definitions/Operador"
          required: true
 
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/GetOperadorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /operadores/find:

    x-swagger-router-controller: drivers.controller
    get:
      description: get a operador
      operationId: getDriverById
      parameters:
        - name: idPar
          in: query
          description: The driverid 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOperadorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
 
  /operadores/login:
    x-swagger-router-controller: drivers.controller
    get:
      tags:
        - operador
      summary: Logs operador into the system
      description: ''
      operationId: getOperadoresLogin
      produces:
        - application/json
      parameters:
        - name: operadores_email
          in: query
          description: The operador name for login
          required: true
          type: string
        - name: operadores_loginmanual
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/GetOperadorResponse'
        '400':
          description: Invalid username/password supplied

  /dispositivo:
    get:
      tags:
      - dispositivo
      description: "Obtiene la lista de dispositivos"
      operationId: "getAlldispositivos"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Dispositivo"
        404:
          description: "Dispositivos no encontrados"
      x-swagger-router-controller: Dispositivo
  
  '/dispositivo/{dispositivo_id}':
    get:
      tags:
        - dispositivo
      summary: Find Dispositivo by ID
      description: Returns a single Dispositivo
      operationId: getDispositivoById
      produces:
        - application/json
      parameters:
        - name: dispositivo_id
          in: path
          description: ID of dispositivo to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Dispositivo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dispositivo not found
      x-swagger-router-controller: Dispositivo

  /place:
    get:
      tags:
      - place
      description: "Obtiene la lista de lugares o puntos clave por cliente"
      operationId: "getAllplaces"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Place"
        404:
          description: "Lugares no encontrados"
      x-swagger-router-controller: Place


  /licencias/login:
    x-swagger-router-controller: licencias.controller
    get:
      tags:
        - licencia
      summary: Logs cliente into the system
      description: ''
      operationId: getLoginLicencia
      produces:
        - application/json
      parameters:
        - name: licencia_usuario
          in: query
          description: The user name for login
          required: true
          type: string
        - name: licencia_password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Licencia'
        '400':
          description: Invalid username/password supplied
          schema:
            $ref: '#/definitions/GeneralResponse'

  /viajes:
    x-swagger-router-controller: viajes.controller
#    options:
#      responses:
#        default:
#          description: CORS headers for all operations
#          headers:
#            Access-Control-Allow-Origin:
#              type: string
#              default: localhost:4200
#            Access-Control-Allow-Headers:
#              type: string
#              default: X-UA-Compatible, X-XSS-Protection
    get:
      tags:
      - viajes
      description: "Obtiene la lista de viajes"
      operationId: "getOrders"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetViajeListResponse"
        404:
          description: "Viajes not found"

    post:
      tags:
      - viajes
      description: "inserta un nuevo viaje"
      operationId: "addViaje"
      produces:
      - "application/json"
      parameters:
        - in: body

          name: myorder
          description: Viaje object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Viaje'
        '400':
          description: Invalid Order

    put:
      tags:
      - viajes
      description: "actualiza un viaje"
      operationId: "updateViaje"
      produces:
      - "application/json"
      parameters:
        - in: body

          name: myorder
          description: Viaje object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/OrderStatus'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OrderStatus'
        '400':
          description: Invalid OrderStatus

  '/viajes/{id}':
    x-swagger-router-controller: viajes.controller

    get:
      tags:
        - viajes
      summary: Find Viaje by ID
      description: Returns a single Viaje
      operationId: getOrderbyId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of viaje to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Viaje'
        '400':
          description: Invalid ID supplied
        '404':
          description: Viaje not found

  '/viajes_detail/{id}':
    x-swagger-router-controller: viajes.controller

    get:
      tags:
        - viajes
      summary: Find Viaje detail by ID
      description: Returns a list of Viaje Detail
      operationId: getOrderDetailbyId
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of viaje detail to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/GetViajeDetailListResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Viaje not found


  /trucks:
    x-swagger-router-controller: trucks.controller

    get:
      tags:
      - trucks
      description: "Obtiene la lista de trucks"
      operationId: "getTrucks"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetTruckListResponse"
        404:
          description: "Trucks not found"

  '/trucks/find':
    x-swagger-router-controller: trucks.controller

    get:
      tags:
        - trucks
      summary: Find truck by ID
      description: Returns a single trucks
      operationId: getTruckById
      produces:
        - application/json
      parameters:
        - name: idPar
          in: query
          description: ID of truck to return
          required: true
          type: string

      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Truck'
        '400':
          description: Invalid ID supplied
        '404':
          description: truck not found


 
  /trailers:
    x-swagger-router-controller: trailers.controller

    get:
      tags:
      - trailers
      description: "Obtiene la lista de trailers"
      operationId: "getTrailers"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetTrailerListResponse"
        404:
          description: "Trailers not found"

  '/trailers/find':
    x-swagger-router-controller: trailers.controller

    get:
      tags:
        - trailers
      summary: Find trailer by id
      description: Returns a single trailer
      operationId: getTrailerById
      produces:
        - application/json
      parameters:
        - name: idPar
          in: query
          description: ID of trailer to return
          required: true
          type: string
          
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Trailer'
        '400':
          description: Invalid ID supplied
        '404':
          description: trailer not found



  /dollys:
    x-swagger-router-controller: dollys.controller

    get:
      tags:
      - dollys
      description: "Obtiene la lista de dollys"
      operationId: "getDollys"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetDollyListResponse"
        404:
          description: "Dollys not found"


  '/dollys/find':
    x-swagger-router-controller: dollys.controller

    get:
      tags:
        - dollys
      summary: Find dolly by ID
      description: Returns a single Dolly
      operationId: getDollyById
      produces:
        - application/json
      parameters:
        - name: idPar
          in: query
          description: The dollyid 
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Dolly'
        '400':
          description: Invalid ID supplied
        '404':
          description: Dolly not found

  /rutas:
    x-swagger-router-controller: routes.controller

    get:
      tags:
      - rutas
      description: "Obtiene la lista de rutas"
      operationId: "getRoutes"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetRouteListResponse"
        404:
          description: "Routes not found"

  '/rutas_detail/{id}':
    x-swagger-router-controller: routes.controller

    get:
      tags:
        - rutas
      summary: Find dolly by ID
      description: Returns a single route
      operationId: getRouteDetailById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of route to return
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/GetRouteDetailListResponse'
        '400':
          description: Invalid ID supplied
        '404':
          description: Route not found


  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:

  Dispositivo:
    type: object
    properties:
      uid:
        type: string
      descripcion:
        type: string
    
    example:
      uid: '001'
      descripcion: 'Android alcatel'
    xml:
      name: Dispositivo
  

  Operador:
    type: object
    properties:
      codigo:
        type: integer
      nombre:
        type: string
      apellidos:
        type: string
      id_flota:
        type: string
      tag:
        type: string
      email:
        type: string
      loginmanual:
        type: string

    example:
      codigo: 100
      nombre: 'adolfo'
      apellidos: 'centeno tellez'
      id_flota: 'hesa'
      tag: 'QWERTY123'
      email: 'adsoft@live.com.mx'
      loginmanual: '99887766'

    xml:
      name: Operador

  Route:
    type: object
    properties:
#      id:
#        type: integer
#        format: int64
      routeid:
        type: string

      companyid:
        type: string
 
      customerid:
        type: string
      placesource:
        type: string
      placetarget:
        type: string
      
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  GetRouteListResponse:
    required:
      - routes
    properties:
      routes:
        type: array
        items:
          $ref: "#/definitions/Route"
      
  RouteDetail:
    type: object
    properties:
#      id:
#        type: integer
#        format: int64

      routeid:
        type: string

      routedetailid:
        type: string
 
      customerid:
        type: string

      placeid:
        type: string
      status:
        type: string
      position:
        type: integer
      
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  GetRouteDetailListResponse:
    required:
      - routes
    properties:
      routes:
        type: array
        items:
          $ref: "#/definitions/RouteDetail"


  Trailer:
    type: object
    properties:
#      id:
#        type: integer
#        format: int64
      trailernumber:
        type: string

      trailertype:
        type: string
 
      brand:
        type: string
      model:
        type: string
      year:
        type: string
      plate:
        type: string
      
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  GetTrailerListResponse:
    required:
      - trailers
    properties:
      trailers:
        type: array
        items:
          $ref: "#/definitions/Trailer"


  Dolly:
    type: object
    properties:
      id:
        type: integer
        format: int64
      dollynumber:
        type: string

      brand:
        type: string
      model:
        type: string
      year:
        type: string
      
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  GetDollyListResponse:
    required:
      - dollys
    properties:
      dollys:
        type: array
        items:
          $ref: "#/definitions/Dolly"



  Truck:
    type: object
    properties:
#      id:
#        type: integer
#        format: int64
      trucknumber:
        type: string
      brand:
        type: string
      model:
        type: string
      year:
        type: string
      plate:
        type: string
      
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  GetTruckListResponse:
    required:
      - trucks
    properties:
      trucks:
        type: array
        items:
          $ref: "#/definitions/Truck"

  OrderStatus:
    type: object
    properties:
      orderid:
        type: integer
      orderadminid:
        type: integer
      orderstatusid:
        type: integer


  Viaje:
    type: object
    properties:
#      id:
#        type: integer
#        format: int64
      companyid:
        type: string
      customerid:
        type: string
      orderid:
        type: integer
      driverid:
        type: string
      truckid:
        type: string
      trailerid1:
        type: string
      dollyid:
        type: string
      trailerid2:
        type: string
      zone: 
        type: string       
      assigndate: 
        type: string
      teadate: 
        type: string
      enddate: 
        type: string
      teastatus: 
        type: string
      source:
        type: string      
      sourceaddr:
        type: string      
      target: 
        type: string      
      targetaddr:
        type: string      
      km: 
        type: string      
      lt: 
        type: string      
      km_lt: 
        type: string      
      price_lt:
        type: string      
      cost:
        type: string
      routeid:
        type: string
      orderadminid:
        type: integer
      orderstatusid:
        type: integer
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  GetViajeListResponse:
    required:
      - operadores
    properties:
      operadores:
        type: array
        items:
          $ref: "#/definitions/Viaje"

  ViajeDetail:
    type: object
    properties:
 #     id:
 #       type: number
      companyid:
        type: string
      customerid:
        type: string
      orderid:
        type: number
      orderdetailid:
        type: number
      routedetailid:
        type: string
      category:
        type: string
      type:
        type: string
      orderdetaildescription:
        type: string
      orderdetailmessage:
        type: string      
      orderdetailarrivedate:
        type: string      
      orderdetailactivity: 
        type: string      
      orderdetailproductid:
        type: string      
      orderdetailproductdescription: 
        type: string      
      orderdetailproductquantity: 
        type: string      
      orderdetailproductunitid: 
        type: string      
      orderdetailproductunitdescription:
        type: string      
      orderdetailstatus:
        type: string
      signsnumber: 
        type: number
      picturesnumber: 
        type: number
      commentsnumber: 
        type: number
      qrsnumber: 
        type: number
      codebarsnumber: 
        type: number
      lat:
        type: string
      lng:
        type: string
      radio:
        type: string
      polygon:
        type: string
 
#    example:
#      codigo: 100
#      descripcion: 'viaje demo 1'
#      id: 0
#      origen: 'orizaba'
#      destino: 'ciudad mexico'
    xml:
      name: Viaje

  Order:
    required:
      - order
      - orderdetail
    properties:
    
      order:
        $ref: "#/definitions/Viaje"
      orderdetail:
        type: array
        items:
          $ref: "#/definitions/ViajeDetail"
          
  GetViajeDetailListResponse:
    required:
      - orderdetail
    properties:
      orderdetail:
        type: array
        items:
          $ref: "#/definitions/ViajeDetail"

  Licencia:
    type: object
    properties:
      id_cliente:
        type: string
      usuario:
        type: string
      password:
        type: string
    example:
      id_cliente: 'hesa'
      usuario: 'adsoft@live.com.mx'
      password: 'xzy321'
    xml:
      name: Licencia

  Place:
    type: object
    properties:
      id_flota:
        type: string
      nombre:
        type: string
      descripcion:
        type: string
      tag:
        type: string

    example:
      id_flota: '001'
      nombre: 'hesa'
      descripcion: 'fletes hesa sa de cv'
      tag: 'aabbccdd99'
    xml:
      name: Place

  
  GetOperadorResponse:
    type: object
    properties:
      id:
        type: number
        description: identifier
      driverid: 
        type: string
        description: codigo del operador
      name:
        type: string
        description: nombre del operador
      lastname:
        type: string
      license:
        type: string
      licensetype:
        type: string
      licensedue:
        type: string
      companyid:
        type: string
      nfctag:
        type: string
      email:
        type: string
      password:
        type: string


        #  required:
  #    - id
  #    - codigo
  #    - nombre
  GetOperadoresListResponse:
    required:
      - operadores
    properties:
      operadores:
        type: array
        items:
          $ref: "#/definitions/GetOperadorResponse"

  GeneralResponse:
    type: object
    properties:
      message:
        type: string
    required:
      - message
  ErrorResponse:
    type: object
    properties:
      error:
        $ref: '#/definitions/ErrorIntResponse'
  ErrorIntResponse:
    properties:
      code:
        type: number
      message:
        type: string
      description:
        type: string
    required:
      - message

